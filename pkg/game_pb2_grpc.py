# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pkg.game_pb2 as game__pb2


class MafiaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetUsername = channel.unary_unary(
                '/MafiaService/SetUsername',
                request_serializer=game__pb2.SetUsernameRequest.SerializeToString,
                response_deserializer=game__pb2.SetUsernameResponse.FromString,
                )
        self.StartSession = channel.unary_unary(
                '/MafiaService/StartSession',
                request_serializer=game__pb2.StartSessionRequest.SerializeToString,
                response_deserializer=game__pb2.StartSessionResponse.FromString,
                )
        self.JoinSession = channel.unary_unary(
                '/MafiaService/JoinSession',
                request_serializer=game__pb2.JoinSessionRequest.SerializeToString,
                response_deserializer=game__pb2.JoinSessionResponse.FromString,
                )
        self.Messenger = channel.unary_stream(
                '/MafiaService/Messenger',
                request_serializer=game__pb2.MessengerRequest.SerializeToString,
                response_deserializer=game__pb2.MessengerResponse.FromString,
                )
        self.DayNight = channel.unary_unary(
                '/MafiaService/DayNight',
                request_serializer=game__pb2.DayNightRequest.SerializeToString,
                response_deserializer=game__pb2.DayNightResponse.FromString,
                )
        self.KillPlayer = channel.unary_unary(
                '/MafiaService/KillPlayer',
                request_serializer=game__pb2.KillPlayerRequest.SerializeToString,
                response_deserializer=game__pb2.KillPlayerResponse.FromString,
                )
        self.DetectiveMove = channel.unary_unary(
                '/MafiaService/DetectiveMove',
                request_serializer=game__pb2.DetectiveMoveRequest.SerializeToString,
                response_deserializer=game__pb2.DetectiveMoveResponse.FromString,
                )
        self.PublishData = channel.unary_unary(
                '/MafiaService/PublishData',
                request_serializer=game__pb2.PublishDataRequest.SerializeToString,
                response_deserializer=game__pb2.PublishDataResponse.FromString,
                )
        self.Info = channel.unary_unary(
                '/MafiaService/Info',
                request_serializer=game__pb2.InfoRequest.SerializeToString,
                response_deserializer=game__pb2.InfoResponse.FromString,
                )


class MafiaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Messenger(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DayNight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetectiveMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUsername,
                    request_deserializer=game__pb2.SetUsernameRequest.FromString,
                    response_serializer=game__pb2.SetUsernameResponse.SerializeToString,
            ),
            'StartSession': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSession,
                    request_deserializer=game__pb2.StartSessionRequest.FromString,
                    response_serializer=game__pb2.StartSessionResponse.SerializeToString,
            ),
            'JoinSession': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinSession,
                    request_deserializer=game__pb2.JoinSessionRequest.FromString,
                    response_serializer=game__pb2.JoinSessionResponse.SerializeToString,
            ),
            'Messenger': grpc.unary_stream_rpc_method_handler(
                    servicer.Messenger,
                    request_deserializer=game__pb2.MessengerRequest.FromString,
                    response_serializer=game__pb2.MessengerResponse.SerializeToString,
            ),
            'DayNight': grpc.unary_unary_rpc_method_handler(
                    servicer.DayNight,
                    request_deserializer=game__pb2.DayNightRequest.FromString,
                    response_serializer=game__pb2.DayNightResponse.SerializeToString,
            ),
            'KillPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.KillPlayer,
                    request_deserializer=game__pb2.KillPlayerRequest.FromString,
                    response_serializer=game__pb2.KillPlayerResponse.SerializeToString,
            ),
            'DetectiveMove': grpc.unary_unary_rpc_method_handler(
                    servicer.DetectiveMove,
                    request_deserializer=game__pb2.DetectiveMoveRequest.FromString,
                    response_serializer=game__pb2.DetectiveMoveResponse.SerializeToString,
            ),
            'PublishData': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishData,
                    request_deserializer=game__pb2.PublishDataRequest.FromString,
                    response_serializer=game__pb2.PublishDataResponse.SerializeToString,
            ),
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=game__pb2.InfoRequest.FromString,
                    response_serializer=game__pb2.InfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'MafiaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MafiaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/SetUsername',
            game__pb2.SetUsernameRequest.SerializeToString,
            game__pb2.SetUsernameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/StartSession',
            game__pb2.StartSessionRequest.SerializeToString,
            game__pb2.StartSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JoinSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/JoinSession',
            game__pb2.JoinSessionRequest.SerializeToString,
            game__pb2.JoinSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Messenger(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/MafiaService/Messenger',
            game__pb2.MessengerRequest.SerializeToString,
            game__pb2.MessengerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DayNight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/DayNight',
            game__pb2.DayNightRequest.SerializeToString,
            game__pb2.DayNightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/KillPlayer',
            game__pb2.KillPlayerRequest.SerializeToString,
            game__pb2.KillPlayerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DetectiveMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/DetectiveMove',
            game__pb2.DetectiveMoveRequest.SerializeToString,
            game__pb2.DetectiveMoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/PublishData',
            game__pb2.PublishDataRequest.SerializeToString,
            game__pb2.PublishDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/MafiaService/Info',
            game__pb2.InfoRequest.SerializeToString,
            game__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
